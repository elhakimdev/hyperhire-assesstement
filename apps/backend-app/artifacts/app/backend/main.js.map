{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,yBAAyB,mBAAO,CAAC,CAAkB;AACnD,sBAAsB,mBAAO,CAAC,CAAe;AAC7C,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,0BAA0B,mBAAO,CAAC,CAA8C;AAChF,sBAAsB,mBAAO,CAAC,EAA0C;AACxE,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,wBAAwB,mBAAO,CAAC,EAAiC;AACjE,yBAAyB,mBAAO,CAAC,CAAkC;AACnE,gDAAgD,mBAAO,CAAC,EAAwB;AAChF;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;AC7Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;;;;;;;ACVA;;;;;;ACAa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,iBAAiB,mBAAO,CAAC,CAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;ACvBA;;;;;;ACAa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,uBAAuB,mBAAO,CAAC,CAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;;;;;;AC7Ea;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,yBAAyB,mBAAO,CAAC,CAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,gBAAgB;AACvC,SAAS;AACT;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS,MAAM;AACpE;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;AACA,2CAA2C,YAAY,WAAW,qBAAqB,IAAI;AAC3F,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C,aAAa;AACb;AACA;AACA;AACA;AACA,8BAA8B,WAAW,GAAG,KAAK;AACjD;AACA;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA,oBAAoB,4BAA4B;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC,SAAS;AACT;AACA,qBAAqB,IAAI;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC,oBAAoB,yBAAyB;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA;;;;;;;ACpHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,iBAAiB,mBAAO,CAAC,EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;;;;;;;ACjBA;;;;;;ACAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,uBAAuB,mBAAO,CAAC,CAAgB;AAC/C,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,yBAAyB,mBAAO,CAAC,CAAsC;AACvE;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;AACL;;;;;;;ACfa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,yBAAyB,mBAAO,CAAC,CAAkB;AACnD;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;;;;;;;ACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,oCAAoC,mBAAO,CAAC,EAAQ;AACpD,gCAAgC,mBAAO,CAAC,EAAI;AAC5C,kCAAkC,mBAAO,CAAC,EAAS;AACnD,eAAe,mBAAO,CAAC,EAAM;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD;AACvD;AACA;AACA,gDAAgD,MAAM;AACtD;AACA,yCAAyC,wCAAwC;AACjF,yCAAyC,KAAK,OAAO,QAAQ,IAAI,oBAAoB;AACrF,kEAAkE;AAClE;AACA;AACA;AACA;AACA,uBAAuB;AACvB,kBAAe;AACf;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;;;;;;ACpCA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACtBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,CAAO;AAC/B,qBAAqB,mBAAO,CAAC,CAAkB;AAC/C,sBAAsB,mBAAO,CAAC,CAAmB;AACjD,iBAAiB,mBAAO,CAAC,CAAgB;AACzC,eAAe,mBAAO,CAAC,EAAc;AACrC,yCAAyC,mBAAO,CAAC,EAAQ;AACzD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK,GAAG,KAAK,GAAG,aAAa;AAChF,KAAK;AACL;AACA","sources":["webpack://@hyperhire-projects/backend-app/external commonjs \"tslib\"","webpack://@hyperhire-projects/backend-app/./src/app/app.module.ts","webpack://@hyperhire-projects/backend-app/./src/app/app.controller.ts","webpack://@hyperhire-projects/backend-app/external commonjs \"@nestjs/common\"","webpack://@hyperhire-projects/backend-app/./src/app/app.service.ts","webpack://@hyperhire-projects/backend-app/external commonjs \"@nestjs/config\"","webpack://@hyperhire-projects/backend-app/./src/app/controller/menu-controller/menu.controller.ts","webpack://@hyperhire-projects/backend-app/./src/app/controller/menu-controller/menu.service.ts","webpack://@hyperhire-projects/backend-app/./src/app/services/prisma/prisma.service.ts","webpack://@hyperhire-projects/backend-app/external commonjs \"@prisma/client\"","webpack://@hyperhire-projects/backend-app/./src/app/controller/menu-controller/menu.module.ts","webpack://@hyperhire-projects/backend-app/./src/app/services/prisma/prisma.module.ts","webpack://@hyperhire-projects/backend-app/./src/app/config/configuration.ts","webpack://@hyperhire-projects/backend-app/external commonjs \"dotenv\"","webpack://@hyperhire-projects/backend-app/external node-commonjs \"fs\"","webpack://@hyperhire-projects/backend-app/external commonjs \"js-yaml\"","webpack://@hyperhire-projects/backend-app/external node-commonjs \"path\"","webpack://@hyperhire-projects/backend-app/external commonjs \"@nestjs/core\"","webpack://@hyperhire-projects/backend-app/webpack/bootstrap","webpack://@hyperhire-projects/backend-app/./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst app_controller_1 = require(\"./app.controller\");\nconst app_service_1 = require(\"./app.service\");\nconst config_1 = require(\"@nestjs/config\");\nconst menu_controller_1 = require(\"./controller/menu-controller/menu.controller\");\nconst menu_module_1 = require(\"./controller/menu-controller/menu.module\");\nconst common_1 = require(\"@nestjs/common\");\nconst prisma_module_1 = require(\"./services/prisma/prisma.module\");\nconst prisma_service_1 = require(\"./services/prisma/prisma.service\");\nconst configuration_1 = tslib_1.__importDefault(require(\"./config/configuration\"));\nlet AppModule = class AppModule {\n};\nexports.AppModule = AppModule;\nexports.AppModule = AppModule = tslib_1.__decorate([\n    (0, common_1.Module)({\n        imports: [\n            config_1.ConfigModule.forRoot({\n                isGlobal: true,\n                load: [configuration_1.default]\n            }),\n            menu_module_1.MenuModule,\n            prisma_module_1.PrismaModule,\n        ],\n        controllers: [app_controller_1.AppController, menu_controller_1.MenuController],\n        providers: [app_service_1.AppService, prisma_service_1.PrismaService],\n    })\n], AppModule);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppController = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nlet AppController = class AppController {\n};\nexports.AppController = AppController;\nexports.AppController = AppController = tslib_1.__decorate([\n    (0, common_1.Controller)()\n], AppController);\n","module.exports = require(\"@nestjs/common\");","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst config_1 = require(\"@nestjs/config\");\nlet AppService = class AppService {\n    constructor(configService) {\n        this.configService = configService;\n    }\n    getAppConfig() {\n        return this.configService.getOrThrow('app');\n    }\n    getDatabaseConfig() {\n        return this.configService.getOrThrow('database');\n    }\n};\nexports.AppService = AppService;\nexports.AppService = AppService = tslib_1.__decorate([\n    (0, common_1.Injectable)(),\n    tslib_1.__param(0, (0, common_1.Inject)()),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof config_1.ConfigService !== \"undefined\" && config_1.ConfigService) === \"function\" ? _a : Object])\n], AppService);\n","module.exports = require(\"@nestjs/config\");","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MenuController = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst menu_service_1 = require(\"./menu.service\");\nlet MenuController = class MenuController {\n    constructor(menuService) {\n        this.menuService = menuService;\n    }\n    findAll() {\n        return this.menuService.findAll();\n    }\n    findOne(id, depth) {\n        return this.menuService.findOne(id, depth);\n    }\n    create(createMenuDto) {\n        return this.menuService.create(createMenuDto);\n    }\n    update(id, updateMenuDto) {\n        return this.menuService.update(id, updateMenuDto);\n    }\n    remove(id) {\n        return this.menuService.delete(id);\n    }\n    saveMenu(menuList) {\n        return this.menuService.saveMenu(menuList);\n    }\n};\nexports.MenuController = MenuController;\ntslib_1.__decorate([\n    (0, common_1.Get)(),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", []),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"findAll\", null);\ntslib_1.__decorate([\n    (0, common_1.Get)(\":id\"),\n    tslib_1.__param(0, (0, common_1.Param)(\"id\")),\n    tslib_1.__param(1, (0, common_1.Query)(\"depth\")),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [String, Number]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"findOne\", null);\ntslib_1.__decorate([\n    (0, common_1.Post)(),\n    tslib_1.__param(0, (0, common_1.Body)()),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"create\", null);\ntslib_1.__decorate([\n    (0, common_1.Patch)(\":id\"),\n    tslib_1.__param(0, (0, common_1.Param)(\"id\")),\n    tslib_1.__param(1, (0, common_1.Body)()),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [String, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"update\", null);\ntslib_1.__decorate([\n    (0, common_1.Delete)(\":id\"),\n    tslib_1.__param(0, (0, common_1.Param)(\"id\")),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [String]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"remove\", null);\ntslib_1.__decorate([\n    (0, common_1.Post)(\"save\"),\n    tslib_1.__param(0, (0, common_1.Body)()),\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Array]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], MenuController.prototype, \"saveMenu\", null);\nexports.MenuController = MenuController = tslib_1.__decorate([\n    (0, common_1.Controller)(\"menus\"),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof menu_service_1.MenuService !== \"undefined\" && menu_service_1.MenuService) === \"function\" ? _a : Object])\n], MenuController);\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MenuService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst prisma_service_1 = require(\"../../services/prisma/prisma.service\");\nlet MenuService = class MenuService {\n    constructor(prisma) {\n        this.prisma = prisma;\n    }\n    /**\n     * Get all menus hierarchically\n     */\n    async findAll() {\n        return this.findMenuWithChildren(null); // Start from root\n    }\n    /**\n     * Recursively fetch all menus and their children\n     */\n    async findMenuWithChildren(parentId = null) {\n        const menus = await this.prisma.treeMenu.findMany({\n            where: { parentId },\n            include: { children: true }, // Fetch immediate children\n        });\n        for (const menu of menus) {\n            menu.children = await this.findMenuWithChildren(menu.id); // Fetch nested children\n        }\n        return menus;\n    }\n    /**\n     * Get a specific menu with depth and root\n     */\n    async findOne(id, depth = 2) {\n        return this.getMenuWithDepth(id, depth);\n    }\n    async getMenuWithDepth(id, depth) {\n        if (depth === 0) {\n            return this.prisma.treeMenu.findUnique({ where: { id } });\n        }\n        return this.prisma.treeMenu.findUnique({\n            where: { id },\n            include: {\n                children: {\n                    include: depth > 1 ? { children: { include: { children: true } } } : {},\n                },\n            },\n        });\n    }\n    /**\n     * Create a menu item hierarchically\n     */\n    async create(data) {\n        let generatedUrl = data.url || \"\";\n        if (data.parentId) {\n            const parent = await this.prisma.treeMenu.findUnique({\n                where: { id: data.parentId },\n            });\n            if (!parent) {\n                throw new common_1.NotFoundException(\"Parent menu not found\");\n            }\n            const slug = this.slugify(data.name);\n            generatedUrl = `${parent.url}/${slug}`;\n        }\n        else {\n            generatedUrl = `/${this.slugify(data.name)}`;\n        }\n        return this.prisma.treeMenu.create({\n            data: { ...data, url: generatedUrl },\n        });\n    }\n    /**\n     * Update a menu item\n     */\n    async update(id, data) {\n        return this.prisma.treeMenu.update({\n            where: { id },\n            data,\n        });\n    }\n    /**\n     * Delete a menu item and all its children\n     */\n    async delete(id) {\n        await this.prisma.treeMenu.deleteMany({\n            where: { parentId: id },\n        });\n        return this.prisma.treeMenu.delete({\n            where: { id },\n        });\n    }\n    /**\n     * Save menu structure (batch update)\n     */\n    async saveMenu(menuList) {\n        const updates = menuList.map((menu) => this.prisma.treeMenu.update({\n            where: { id: menu.id },\n            data: { parentId: menu.parentId },\n        }));\n        return this.prisma.$transaction(updates);\n    }\n    /**\n     * Helper function to convert a string into a slug\n     */\n    slugify(text) {\n        return text\n            .toLowerCase()\n            .trim()\n            .replace(/\\s+/g, \"-\")\n            .replace(/[^\\w-]+/g, \"\");\n    }\n};\nexports.MenuService = MenuService;\nexports.MenuService = MenuService = tslib_1.__decorate([\n    (0, common_1.Injectable)(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof prisma_service_1.PrismaService !== \"undefined\" && prisma_service_1.PrismaService) === \"function\" ? _a : Object])\n], MenuService);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrismaService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst client_1 = require(\"@prisma/client\");\nlet PrismaService = class PrismaService extends client_1.PrismaClient {\n    async onModuleInit() {\n        await this.$connect();\n    }\n    async onModuleDestroy() {\n        await this.$disconnect();\n    }\n};\nexports.PrismaService = PrismaService;\nexports.PrismaService = PrismaService = tslib_1.__decorate([\n    (0, common_1.Injectable)()\n], PrismaService);\n","module.exports = require(\"@prisma/client\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MenuModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst menu_service_1 = require(\"./menu.service\");\nconst common_1 = require(\"@nestjs/common\");\nconst prisma_service_1 = require(\"../../services/prisma/prisma.service\");\nlet MenuModule = class MenuModule {\n};\nexports.MenuModule = MenuModule;\nexports.MenuModule = MenuModule = tslib_1.__decorate([\n    (0, common_1.Module)({\n        providers: [menu_service_1.MenuService, prisma_service_1.PrismaService],\n        exports: [menu_service_1.MenuService, prisma_service_1.PrismaService],\n    })\n], MenuModule);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PrismaModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst prisma_service_1 = require(\"./prisma.service\");\nlet PrismaModule = class PrismaModule {\n};\nexports.PrismaModule = PrismaModule;\nexports.PrismaModule = PrismaModule = tslib_1.__decorate([\n    (0, common_1.Module)({\n        providers: [prisma_service_1.PrismaService],\n        exports: [prisma_service_1.PrismaService],\n    })\n], PrismaModule);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseConfigVars = void 0;\nconst tslib_1 = require(\"tslib\");\nconst dotnev = tslib_1.__importStar(require(\"dotenv\"));\nconst fs = tslib_1.__importStar(require(\"fs\"));\nconst yaml = tslib_1.__importStar(require(\"js-yaml\"));\nconst path_1 = require(\"path\");\ndotnev.config();\nconst parseConfigVars = (object) => {\n    if (!object || typeof object !== 'object')\n        return; // Ensure object is valid\n    for (const key in object) {\n        if (typeof object[key] === 'object' && object[key] !== null) {\n            (0, exports.parseConfigVars)(object[key]); // Recursively process nested objects\n        }\n        else if (typeof object[key] === 'string') {\n            const match = object[key].match(/\\${(.*?)}/);\n            if (match) {\n                const envVar = match[1]; // Extract the variable name inside `${}`\n                console.log(`Replacing ${key} with ${envVar} = ${process.env[envVar]}`);\n                object[key] = process.env[envVar] || object[key]; // Replace with .env value or keep original\n            }\n        }\n    }\n};\nexports.parseConfigVars = parseConfigVars;\nexports.default = () => {\n    const appConfigPath = (0, path_1.join)(process.cwd(), 'apps/backend-app/src/app/config/application.configuration.yaml');\n    if (!fs.existsSync(appConfigPath)) {\n        throw new Error(`Configuration file not found: ${appConfigPath}`);\n    }\n    // Load YAML configuration\n    const config = yaml.load(fs.readFileSync(appConfigPath, 'utf8'));\n    (0, exports.parseConfigVars)(config); // Parse environment variables\n    return config;\n};\n","module.exports = require(\"dotenv\");","module.exports = require(\"fs\");","module.exports = require(\"js-yaml\");","module.exports = require(\"path\");","module.exports = require(\"@nestjs/core\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst app_module_1 = require(\"./app/app.module\");\nconst app_service_1 = require(\"./app/app.service\");\nconst common_1 = require(\"@nestjs/common\");\nconst core_1 = require(\"@nestjs/core\");\nconst dotenv_1 = tslib_1.__importDefault(require(\"dotenv\"));\ndotenv_1.default.config();\nasync function bootstrap() {\n    const app = await core_1.NestFactory.create(app_module_1.AppModule, {\n        logger: ['error', 'warn', 'log', \"debug\", \"verbose\"],\n    });\n    const appConfig = app.get(app_service_1.AppService).getAppConfig();\n    const globalPrefix = 'api';\n    app.setGlobalPrefix(globalPrefix);\n    const port = appConfig.port || 8081;\n    const host = appConfig.host || 'localhost';\n    app.listen(port, host, () => {\n        common_1.Logger.log(`Listening at http://${host}:${port}/${globalPrefix}`);\n    });\n}\nbootstrap();\n"],"names":[],"sourceRoot":""}