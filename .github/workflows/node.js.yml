name: Nx CI/CD (pnpm)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures proper commit history for Nx caching

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Cleanup Artifacts
        run: rm -rf artifacts || true
      
      - name: Install Prisma Client in Backend Before Build
        run: pnpm add @prisma/client --filter backend-app

      - name: Generate Prisma Client
        run: pnpm exec prisma generate --schema=prisma/schema.prisma

      - name: Build Nest.js App (Backend)
        run: pnpm exec nx build backend-app --parallel --skip-nx-cache

      - name: Build Next.js App (SSR)
        run: pnpm exec nx build frontend-app --parallel --skip-nx-cache

      - name: Move Backend Build Output
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app
          mv -v apps/backend-app/dist $GITHUB_WORKSPACE/artifacts/apps/backend-app
      
      # - name: Install Dependencies in Backend Artifact
      #   run: |
      #     if [ -d $GITHUB_WORKSPACE/artifacts/apps/backend-app ]; then
      #       cd $GITHUB_WORKSPACE/artifacts/apps/backend-app
      #       pnpm install --no-frozen-lockfile
      #     else
      #       echo "Backend artifact directory missing, skipping install!"
      #     fi
      
      # - name: Copy Prisma Schema to Backend Artifact
      #   run: |
      #     mkdir -p artifacts/apps/backend-app/prisma
      #     cp prisma/schema.prisma artifacts/apps/backend-app/prisma/
      
      # - name: Install Prisma Client in Backend Artifact
      #   run: |
      #     cd artifacts/apps/backend-app
      #     pnpm add @prisma/client --no-workspace-root
      #     pnpm exec prisma generate

      # - name: Move Prisma Client to Backend Artifact
      #   run: |
      #     mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules
      #     cp -R node_modules/.pnpm/@prisma+client*/node_modules/@prisma $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules/ || echo "No @prisma client found"
      #     cp -R node_modules/.prisma $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules/ || echo "No .prisma directory found"
      #     mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app/prisma
      #     cp -R $GITHUB_WORKSPACE/prisma/schema.prisma $GITHUB_WORKSPACE/artifacts/apps/backend-app/prisma/ || echo "No schema.prisma found"

      # - name: Regenerate Prisma Client in Backend Artifact
      #   run: |
      #     if [ -d $GITHUB_WORKSPACE/artifacts/apps/backend-app ]; then
      #       cd $GITHUB_WORKSPACE/artifacts/apps/backend-app
      #       pnpm exec prisma generate --schema=prisma/schema.prisma
      #     else
      #       echo "Skipping prisma generate: Backend artifact directory missing!"
      #     fi

      - name: Move Frontend Build Output
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/apps/frontend-app
          mv -v apps/frontend-app/.next $GITHUB_WORKSPACE/artifacts/apps/frontend-app

      - name: Verify Artifacts Are Not Ignored
        run: git check-ignore -v $GITHUB_WORKSPACE/artifacts/* || echo "Artifacts are NOT ignored"

      - name: List Generated Artifacts
        run: ls -R artifacts || echo "Artifacts folder is empty!"

      - name: Show Git Status Before Commit
        run: git status --short

      - name: Commit Built Files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

          # Ensure artifacts are not ignored
          git add -f $GITHUB_WORKSPACE/artifacts/ || echo "No artifacts to add"

          # Only commit if there are actual changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ci: auto-commit built files [skip ci]"
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
          fi
