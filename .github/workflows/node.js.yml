name: Nx CI/CD (pnpm)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pastikan history untuk Nx caching

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Cleanup Artifacts
        run: rm -rf artifacts || true

      # ðŸ”¹ Install Prisma Client sebelum build
      - name: Install Prisma Client
        run: pnpm install

      # ðŸ”¹ Generate Prisma Client agar bisa digunakan dalam build
      - name: Generate Prisma Client
        run: pnpm exec prisma generate --schema=prisma/schema.prisma

      # ðŸ”¹ Build Backend (Nest.js)
      - name: Build Nest.js App (Backend)
        run: pnpm exec nx build backend-app --parallel --skip-nx-cache

      # ðŸ”¹ Build Frontend (Next.js)
      - name: Build Next.js App (Frontend)
        run: pnpm exec nx build frontend-app --parallel --skip-nx-cache

      # ðŸ”¹ Simpan hasil build backend
      - name: Move Backend Build Output
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app
          mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules
          mv -v $GITHUB_WORKSPACE/apps/backend-app/dist $GITHUB_WORKSPACE/artifacts/apps/backend-app
          cp -R $GITHUB_WORKSPACE/prisma $GITHUB_WORKSPACE/artifacts/apps/backend-app/prisma
          cp -R $GITHUB_WORKSPACE/node_modules $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules

      # # ðŸ”¹ Install dependencies production di dalam artifacts (supaya Prisma Client tetap ada)
      # - name: Install Production Dependencies in Artifacts
      #   run: |
      #     cd artifacts/apps/backend-app
      #     pnpm install --prod

      # - name: Start Backend Server
      # run: |
      #   cd artifacts/apps/backend-app
      #   NODE_PATH=$(pwd)/node_modules node dist/main.js

      # ðŸ”¹ Copy Node Modules Ke Backend Artifacts
      # - name: Ensure Prisma Client Exists in Artifact
      #   run: |
      #     mkdir -p $GITHUB_WORKSPACE/artifacts/apps/backend-app/node_modules
      #     cp -R node_modules/* artifacts/apps/backend-app/node_modules

      # ðŸ”¹ Copy Node Modules Ke Frontend Artifacts
      # - name: Ensure Prisma Client Exists in Artifact
      #   run: |
      #     mkdir -p artifacts/apps/backend-app/node_modules
      #     cp -R node_modules/* artifacts/apps/backend-app/node_modules

      # ðŸ”¹ Pastikan Prisma Client benar-benar ada di artifacts
      - name: Verify Prisma Client
        run: ls -R artifacts/apps/backend-app/node_modules/@prisma || echo "Prisma Client missing!"

      # ðŸ”¹ Simpan hasil build frontend
      - name: Move Frontend Build Output
        run: |
          mkdir -p artifacts/apps/frontend-app
          mv -v apps/frontend-app/.next artifacts/apps/frontend-app

      # ðŸ”¹ Upload hasil build backend (backend siap deploy)
      - name: Upload Backend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: artifacts/apps/backend-app

      # ðŸ”¹ Upload hasil build frontend (frontend siap deploy)
      - name: Upload Frontend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: artifacts/apps/frontend-app